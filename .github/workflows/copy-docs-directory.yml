name: Copy Directory to Another Repo

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  copy:
    runs-on: ubuntu-latest

    env:
      # Variables for paths and repository configuration
      SOURCE_REPO: "sandeepvshetty77/CalculatorJavaSDK"
      SOURCE_REPO_PATH: "source-repo"
      SOURCE_JAVA_FILES_PATH: "source-repo/CalculatorSDK/src/*.java"
      DOCS_OUTPUT_PATH: "source-repo/docs"
      DESTINATION_REPO: "sandeepvshetty77/CalculatorJavaSDK_Destination"
      DESTINATION_REPO_PATH: "destination-repo"
      DESTINATION_DOCS_PATH: "destination-repo/node/docs/content-api/static"
      BRANCH_NAME: "docs-branch" # Configurable branch name for the destination repo

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v4.3.0
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ env.SOURCE_REPO }}
          path: ${{ env.SOURCE_REPO_PATH }}

      - name: Generate Documentation
        run: |
          mkdir -p ${{ env.DOCS_OUTPUT_PATH }}
          javadoc -sourcepath ${{ env.SOURCE_JAVA_FILES_PATH }} -d ${{ env.DOCS_OUTPUT_PATH }}
          ls -lrta ${{ env.DOCS_OUTPUT_PATH }}

      - name: Commit and Push documentation to same branch
        run: |
          cd ${{ env.SOURCE_REPO_PATH }}
          git pull
          git config --global user.email "your-email@example.com"  # Set your email
          git config --global user.name "GitHub Actions Bot"  # Set a name
          git add .
          git commit -m "Update documentation on $(date '+%Y-%m-%d  %H:%M:%S'')"
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

        # Step 2: Checkout the Destination Repository
      - name: Checkout Destination Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: ${{ env.DESTINATION_REPO }}
          path: ${{ env.DESTINATION_REPO_PATH }}
          token: ${{ secrets.DESTINATION_REPO_TOKEN }} # Using the built-in token

      - name: Create docs-branch if it does not exist
        run: |
          cd ${{ env.DESTINATION_REPO_PATH }}
          git fetch origin
          if git show-ref --verify --quiet refs/heads/${{ env.BRANCH_NAME }}; then
            git checkout ${{ env.BRANCH_NAME }}
            git pull origin ${{ env.BRANCH_NAME }}
          else
            git checkout -b ${{ env.BRANCH_NAME }}
            git pull origin ${{ env.BRANCH_NAME }}
          fi

      # Step 3: Copy the docs from source to destination
      - name: Copy Documentation from Source to Destination repo
        run: |
          # Copy the specific directory to the destination repo
          echo "Source directory:  $(pwd)/${{ env.DOCS_OUTPUT_PATH }}"
          echo "Destination directory: $(pwd)/${{ env.DESTINATION_DOCS_PATH }}"
          rsync -av --delete ${{ env.DOCS_OUTPUT_PATH }}/ ${{ env.DESTINATION_DOCS_PATH }}/
          echo "Documentation copied to destination repository..."

      # Step 4: Commit and push changes to the destination repository
      - name: Commit and Push Changes to Destination repo
        run: |
          cd ${{ env.DESTINATION_REPO_PATH }}
          git config --global user.email "your-email@example.com"  # Set your email
          git config --global user.name "GitHub Actions Bot"  # Set a name
          git add .
          git commit -m "Update documentation from Source repoistory on  $(date '+%Y-%m-%d  %H:%M:%S'')"
          git push origin ${{ env.BRANCH_NAME }}  # Push to the configurable branch

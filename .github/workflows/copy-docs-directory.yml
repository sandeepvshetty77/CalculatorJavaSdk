name: Copy Directory to Another Repo

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  copy:
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v4.3.0
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: sandeepvshetty77/CalculatorJavaSDK
          path: source-repo

      - name: Print current directory
        run: pwd

      - name: List all files and directories
        run: ls -lrta

      - name: Print current working directory
        run: echo "Current working directory:$GITHUB_WORKSPACE"

      - name: List files and directories
        run: ls -la $GITHUB_WORKSPACE

      - name: Generate Javadoc
        run: |
          mkdir -p source-repo/docs
          javadoc -sourcepath source-repo/CalculatorSDK/src/*.java -d  source-repo/docs
          ls -lrta source-repo/docs

      - name: Commit and Push Javadoc
        run: |
          cd source-repo
          git pull
          git config --global user.email "your-email@example.com"  # Set your email
          git config --global user.name "GitHub Actions Bot"  # Set a name
          git add .
          git commit -m "Update Javadoc1"
          git push origin master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

        # Step 2: Checkout the Destination Repository
      - name: Checkout Destination Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: sandeepvshetty77/CalculatorJavaSDK_Destination
          path: destination-repo
          token: ${{ secrets.DESTINATION_REPO_TOKEN }} # Using the built-in token

      - name: Create docs-branch if it does not exist
        run: |
          cd destination-repo
          git fetch origin
          if git show-ref --verify --quiet refs/heads/docs-branch; then
            git checkout docs-branch
            git pull origin docs-branch
          else
            git checkout -b docs-branch
            git pull origin docs-branch
          fi

      # Step 3: Copy the docs from source to destination
      - name: Copy Documentation
        run: |
          # Define the source and destination directories
          SOURCE_DIR="docs"
          DESTINATION_REPO="https://github.com/sandeepvshetty77/CalculatorJavaSDK_Destination.git"
          DESTINATION_DIR="docs"

          # Copy the specific directory to the destination repo
          # cp -r source-repo/$SOURCE_DIR/* destination-repo/$DESTINATION_DIR/*
          echo "Source directory: source-repo/$SOURCE_DIR"
          echo "Source directory 1:  $(pwd)/source-repo/$SOURCE_DIR"
          echo "Destination directory: $(pwd)/destination-repo/$DESTINATION_DIR"
          echo "Destination directory 1: /destination-repo/$DESTINATION_DIR"
          rsync -av --delete source-repo/$SOURCE_DIR/* destination-repo/$DESTINATION_DIR/*
          echo "Documentation copied to destination repository..."

      # Step 4: Commit and push changes to the destination repository
      - name: Commit and Push Changes
        run: |
          cd destination-repo
          git config --global user.email "your-email@example.com"  # Set your email
          git config --global user.name "GitHub Actions Bot"  # Set a name
          git checkout -b docs-branch || git checkout docs-branch  # Create branch if it doesn't exist
          git add .
          git commit -m "Update documentation from CalculatorSDK"
          git push origin docs-branch  # Push to the specific branch
